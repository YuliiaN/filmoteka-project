{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAO,SAASC,EAAcC,GAuB5B,OArBoBA,EAAIC,KACtB,EAACC,GAAEA,EAAEC,MAAEA,EAAKC,YAAEA,EAAWC,OAAEA,EAAMC,aAAEA,MACjC,MAAMC,EAAO,IAAIC,KAAKF,GAAcG,cAKpC,MAAO,iCAAiCP,oGAEdE,WAAqBD,uRAMTA,qDAZfE,EACpBJ,KAAIS,GAASA,EAAMC,OACnBC,MAAM,EAAG,GACTC,KAAK,WAUkDN,qCAEpD,G,kBDhBZ,MAAMO,EAAgB,IAAI,EAAAjB,EAAAkB,SAEpBC,EAAaC,SAASC,cAAc,4BACpCC,EAAWF,SAASC,cAAc,0BAClCE,EAAiBH,SAASC,cAAc,kBAE9C,IAAIG,EAAmB,GAMvBC,eAAeC,IAIb,GAHAJ,EAASK,UAAUC,OARD,0BASlBT,EAAWQ,UAAUE,IATH,0BAWbC,aAAaC,QAAQC,EAAAC,aAGnB,CACL,MACMC,EADYC,KAAKC,MAAMN,aAAaC,QAAQC,EAAAC,cACtB7B,KAAIqB,MAAMY,SACbpB,EAAcqB,gBAAgBD,EAAKhC,MAG5DmB,QAAyBe,QAAQC,IAAIN,GACrC,MAAMO,EAASvC,EAAcsB,GAC7BD,EAAemB,UAAYD,EAAOzB,KAAK,G,MAVvCO,EAAemB,UAAY,E,CAT/BvB,EAAWwB,iBAAiB,QAASjB,GACrCJ,EAASqB,iBAAiB,SAsB1BlB,iBAIE,GAHAN,EAAWQ,UAAUC,OA3BH,0BA4BlBN,EAASK,UAAUE,IA5BD,2BA8BbC,aAAaC,QAAQC,EAAAY,WAExB,YADArB,EAAemB,UAAY,IAEtB,CACL,MACMR,EADUC,KAAKC,MAAMN,aAAaC,QAAQC,EAAAY,YACtBxC,KAAIqB,MAAMY,SACXpB,EAAcqB,gBAAgBD,EAAKhC,MAG5DmB,QAAyBe,QAAQC,IAAIN,GACrC,MAAMO,EAASvC,EAAcsB,GAC7BD,EAAemB,UAAYD,EAAOzB,KAAK,G,KApC3CU,I","sources":["src/js/out-of-local-storage.js","src/js/templates/library-card.js"],"sourcesContent":["import ApiService from './api.js';\nimport { renderLibrary } from './templates/library-card.js';\nimport { KEY_WATCHED, KEY_QUEUE } from './into-local-storage.js';\n\nconst addGalleryAPI = new ApiService();\n\nconst watchedBtn = document.querySelector('.library__button-watched');\nconst queueBtn = document.querySelector('.library__button-queue');\nconst libraryGallery = document.querySelector('.gallery__list');\nconst activeClass = 'library__button-active';\nlet moviesCollection = [];\n\nwatchedBtn.addEventListener('click', getWatchedMovies);\nqueueBtn.addEventListener('click', getQueueMovies);\ngetWatchedMovies();\n\nasync function getWatchedMovies() {\n  queueBtn.classList.remove(activeClass);\n  watchedBtn.classList.add(activeClass);\n\n  if (!localStorage.getItem(KEY_WATCHED)) {\n    libraryGallery.innerHTML = '';\n    return;\n  } else {\n    const watchedId = JSON.parse(localStorage.getItem(KEY_WATCHED));\n    const responses = watchedId.map(async item => {\n      const response = await addGalleryAPI.getMovieDetails(item.id);\n      return response;\n    });\n    moviesCollection = await Promise.all(responses);\n    const markup = renderLibrary(moviesCollection);\n    libraryGallery.innerHTML = markup.join('');\n  }\n}\n\nasync function getQueueMovies() {\n  watchedBtn.classList.remove(activeClass);\n  queueBtn.classList.add(activeClass);\n\n  if (!localStorage.getItem(KEY_QUEUE)) {\n    libraryGallery.innerHTML = '';\n    return;\n  } else {\n    const queueId = JSON.parse(localStorage.getItem(KEY_QUEUE));\n    const responses = queueId.map(async item => {\n      const response = await addGalleryAPI.getMovieDetails(item.id);\n      return response;\n    });\n    moviesCollection = await Promise.all(responses);\n    const markup = renderLibrary(moviesCollection);\n    libraryGallery.innerHTML = markup.join('');\n  }\n}\n\n// import ApiService from './api.js';\n// import { KEY_WATCHED, KEY_QUEUE } from './into-local-storage.js';\n// // import { addPreloader } from './preloader';\n// // import { Notify, Loading } from 'notiflix';\n// import { renderLibrary } from './templates/library-card.js';\n\n// const libraryApi = new ApiService();\n// export const libraryWatched = document.querySelector('.button__watched');\n// export const libraryQueue = document.querySelector('.button__queue');\n// let moviesCollection = [];\n// const libraryGallery = document.querySelector('.gallery__list');\n\n// libraryWatched.addEventListener('click', getWatchedMovies);\n// libraryQueue.addEventListener('click', getQueueMovies);\n// getWatchedMovies();\n\n// async function getWatchedMovies() {\n//   if (!localStorage.getItem(KEY_WATCHED)) {\n//     libraryGallery.innerHTML = '';\n//     return;\n//   }\n//   const data = JSON.parse(localStorage.getItem(KEY_WATCHED));\n//   const responses = data.map(async item => {\n//     const response = await libraryApi.getMovieDetails(item.id);\n\n//     return response;\n//   });\n\n//   moviesCollection = await Promise.all(responses);\n//   const arrMarkup = renderLibrary(moviesCollection);\n//   libraryGallery.innerHTML = arrMarkup.join('');\n// }\n\n// async function getQueueMovies() {\n//   if (!localStorage.getItem(KEY_QUEUE)) {\n//     libraryGallery.innerHTML = '';\n//     return;\n//   }\n//   const data = JSON.parse(localStorage.getItem(KEY_QUEUE));\n//   const responses = data.map(async item => {\n//     const response = await libraryApi.getMovieDetails(item.id);\n\n//     return response;\n//   });\n\n//   moviesCollection = await Promise.all(responses);\n//   const arrMarkup = renderLibrary(moviesCollection);\n//   libraryGallery.innerHTML = arrMarkup.join('');\n// }\n","export function renderLibrary(arr) {\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const libraryCard = arr.map(\n    ({ id, title, poster_path, genres, release_date }) => {\n      const date = new Date(release_date).getFullYear();\n      const filteredGenres = genres\n        .map(genre => genre.name)\n        .slice(0, 3)\n        .join(', ');\n      return `<li class=\"gallery__item\" id=\"${id}\">\n        <div class=\"gallery__film-box\">\n          <img src=\"${IMG_URL}${poster_path}\" alt=\"${title}\" class=\"gallery__film-poster\"/>\n          <button type=\"button\" class=\"gallery__trailer\">\n            <span class=\"trailer-text\">Watch trailer</span>\n          </button>\n        </div>\n        <div class=\"gallery__title-box\">\n          <h2 class=\"gallery__title-film\">${title}</h2>\n          <h3 class=\"gallery__genre-film\">${filteredGenres} | ${date}</h3>\n        </div>\n      </li>`;\n    }\n  );\n  return libraryCard;\n}\n\n// export function renderLibrary(arr) {\n//   const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n//   const libraryCard = arr.map(\n//     ({ genres, id, poster_path, release_date, title }) => {\n//       const date = new Date(release_date).getFullYear();\n//       const filteredGenres = genres\n//         .map(genre => genre.name)\n//         .splice(0, 3)\n//         .join(', ');\n\n//       return `\n//       <li class=\"gallery__item\" id=\"${id}\">\n//         <div class=\"gallery__film-box\">\n//           <img src=\"${IMG_URL}${poster_path}\" alt=\"${title}\" class=\"gallery__film-poster\"/>\n//           <button type=\"button\" class=\"gallery__trailer\">\n//             <span class=\"trailer-text\">Watch trailer</span>\n//           </button>\n//         </div>\n//         <div class=\"gallery__title-box\">\n//           <h2 class=\"gallery__title-film\">${title}</h2>\n//           <h3 class=\"gallery__genre-film\">${filteredGenres} | ${date}</h3>\n//         </div>\n//       </li>`;\n//     }\n//   );\n\n//   return libraryCard;\n// }\n"],"names":["$7rYDH","parcelRequire","$656fff47254dcba1$export$e7d1a4959038c5e5","arr","map","id","title","poster_path","genres","release_date","date","Date","getFullYear","genre","name","slice","join","$79dda667908e97dc$var$addGalleryAPI","default","$79dda667908e97dc$var$watchedBtn","document","querySelector","$79dda667908e97dc$var$queueBtn","$79dda667908e97dc$var$libraryGallery","$79dda667908e97dc$var$moviesCollection","async","$79dda667908e97dc$var$getWatchedMovies","classList","remove","add","localStorage","getItem","$79MDI","KEY_WATCHED","responses","JSON","parse","item","getMovieDetails","Promise","all","markup","innerHTML","addEventListener","KEY_QUEUE"],"version":3,"file":"library.2c387782.js.map"}